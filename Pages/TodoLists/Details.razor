@page "/lists/{id:int}"
@using MyTodo.Models

<PageTitle>@Model.Title</PageTitle>

<MudGrid>
    <MudItem xs="12">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="12" sm="12" md="6" lg="4" xl="4" xxl="4">
                <h1>@Model.Title</h1>

                <MudList Clickable="true" @bind-SelectedItem="selectedItem" @bind-SelectedValue="selectedValue">
                    @foreach (var item in Model.Items)
                    {
                        <MudListItem
                            Text="@item.Title"
                            Value="@item.Id"
                            OnClick="() => { item.Done = !item.Done; }"
                            IconColor="@(item.Done ? Color.Success : Color.Default)"
                            Avatar="@(item.Done ? Icons.Material.Filled.Check : Icons.Material.Filled.Circle)"/>
                    }
                </MudList>

                <hr>
                <br>

                <EditForm Model="@newTodo" OnValidSubmit="@HandleValidSubmit">
                    <MudCard>
                        <MudCardContent>
                            <h1>Create a new task</h1>

                            <DataAnnotationsValidator/>
                            <ValidationSummary/>

                            <MudTextField Label="Title" Class="mt-3"
                                          @bind-Value="newTodo.Title" For="@(() => newTodo.Title)"/>
                        </MudCardContent>

                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                        </MudCardActions>
                    </MudCard>
                </EditForm>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>

@code {

    [Parameter]
    public int Id { get; set; }

    private TodoList Model { get; set; }

    protected override void OnParametersSet()
    {
        Model = AppState.Lists.FirstOrDefault(x => x.Id == Id, new TodoList());
    }


    private TodoItem newTodo = new();

    private void HandleValidSubmit()
    {
        newTodo.Id = Model.Items.Count + 1;
        Model.Items.Add(newTodo);
        newTodo = new();
    }

    MudListItem selectedItem;
    object selectedValue = 1;
}